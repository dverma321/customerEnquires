import React, { useContext, useState, useEffect } from 'react';
import { Navigate } from 'react-router-dom';
import { userContext } from '../App';
import '../pages/Match.css';

const Match = () => {
  const { state } = useContext(userContext);
  const [users, setUsers] = useState([]);
  const [filteredUsers, setFilteredUsers] = useState([]);

  const callGetUserData = async () => {
    try {
      const token = localStorage.getItem('jwtoken');
      const backendURL = 'http://localhost:3000';

      const res = await fetch(`${backendURL}/user/getData`, {
        method: 'GET',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        credentials: 'include',
      });

      const userData = await res.json();
      if (userData.gender) {
        const oppositeGender = userData.gender === 'male' ? 'female' : 'male';
        const usersRes = await fetch(`${backendURL}/user/users`, {
          method: 'GET',
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
            Authorization: `Bearer ${token}`,
          },
          credentials: 'include',
        });
        const usersData = await usersRes.json();
        const filteredData = usersData.filter(user => user.gender === oppositeGender);
        setUsers(filteredData);
      }
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  useEffect(() => {
    if (state) {
      callGetUserData();
    }
  }, [state]);

  useEffect(() => {
    // Filter users based on gender
    if (users.length > 0) {
      setFilteredUsers(users);
    }
  }, [users]);

  console.log('Filtered users:', filteredUsers); // Log filteredUsers data

  if (!state) {
    return <Navigate to="/login" replace />;
  }

  return (
    <div>
      <h2>All Users From MongoDB Database:</h2>
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Gender</th>
            <th>Image</th>
            <th>Caste</th>
            <th>Professional</th>
            <th>Work Type</th>
            <th>Salary</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {filteredUsers.map((user, index) => (
            <tr key={index}>
              <td>{user.name}</td>
              <td>{user.gender}</td>
              <td><img src={user.image} alt={user.name} style={{ height: "50px", width: "50px" }} /></td>
              <td>{user.caste}</td>
              <td>{user.professionalStatus}</td>
              <td>{user.work}</td>
              <td>{user.salary}</td>
              <td>
                <button className='accept' onClick={() => handleEdit(user)}>Send Request</button>
                <button className='reject' onClick={() => handleDelete(user)}>Ignore</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default Match;
